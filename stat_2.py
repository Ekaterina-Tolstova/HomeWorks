# задание 3
import numpy as np
import math


def funk_c(n, k):
    c = math.factorial(n)/(math.factorial(k)*math.factorial(n - k))
    return c


p = funk_c(100, 85) * 0.8**85 * 0.2**(100 - 85)
print(f'1. Вероятность того, что стрелок попадет ровно 85 раз из 100, равна {p:.4f}')

p_2 = (2**2 / 2) * np.exp(-2)
p_0 = (2**0 / 1) * np.exp(-2)
print(f'2. Вероятность того, что перегорят две лампочки, равна {p_2:.4f}, 0 лампочек {p_0:.4f}')

p = funk_c(144, 70) * (1/2)**70 * (1/2)**(144 - 70)
print(f'3. Вероятность того, что орел выпадет ровно 70 раз из 144, равна {p:.4f}')

p_1_box_2_white = funk_c(7, 2) * funk_c(3, 0)/funk_c(10, 2)  # Вероятность того, что из 1-го ящика вынут 2 белых мяча
p_2_box_2_white = funk_c(9, 2) * funk_c(2, 0)/funk_c(11, 2)  # Вероятность того, что из 2-го ящика вынут 2 белых мяча
print(f'4а. Вероятность того, что из двух ящиков вынут 4 белых мяча, равна {p_1_box_2_white * p_2_box_2_white:.4f}')
p_1_box_1_white = funk_c(7, 1) * funk_c(3, 1)/funk_c(10, 2)  # Вероятность того, что из 1-го ящика вынут 1 белый мяч
p_2_box_1_white = funk_c(9, 1) * funk_c(2, 1)/funk_c(11, 2)  # Вероятность того, что из 2-го ящика вынут 1 белый мяч
p_1_box_0_white = funk_c(7, 0) * funk_c(3, 2)/funk_c(10, 2)  # Вероятность того, что из 1-го ящика вынут 0 белых мячей
p_2_box_0_white = funk_c(9, 0) * funk_c(2, 2)/funk_c(11, 2)  # Вероятность того, что из 2-го ящика вынут 0 белых мячей
print(f'4б. Вероятность того, что ровно 2 мяча белые, равна {p_1_box_2_white * p_2_box_0_white + p_1_box_0_white * p_2_box_2_white + p_1_box_1_white * p_2_box_1_white:.4f}')
p_at_least_1_white = 1 - p_1_box_0_white * p_2_box_0_white
print(f'4в. Вероятность того, что хотя бы один мяч белый, равна {p_at_least_1_white:.4f}')
